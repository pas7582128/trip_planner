// DDA ALGO.........
#include <stdio.h>
#include <math.h>
#include <GL/glut.h>
#include <time.h>
long X, Y, r;


void plotPixel(long x,long y){
                glVertex2d(X+x,Y+y);
                glVertex2d(Y+y,X+x);
                glVertex2d(X-x,Y+y);
                glVertex2d(y+Y,X-x);
                glVertex2d(X-x,Y-y);
                glVertex2d(Y-y,X-x);
                glVertex2d(X+x,Y-y);
                glVertex2d(Y-y,X+x);
}

void CircleDraw(void)
{
    /* Clears buffers to preset values */
    glClear(GL_COLOR_BUFFER_BIT);
    /* Plot the points */
    glBegin(GL_POINTS);
    /* Plot the first point */
    long x=0;
        long y=r;
        long p;
        p=1-r;
     while(x<=y)
        {
            if(p<0)
            {
                plotPixel(x,y);
               x=x+1;
                p=p+2*x+1;
            }
            else
            {
               plotPixel(x,y);
                x=x+1;
                y=y-1;
                p=p+2*x+1-2*y; 
            }
        }    
    glEnd();
    glFlush();
}


void Init()
{
    /* Set clear color to white */
    glClearColor(1.0,1.0,1.0,0);
    /* Set fill color to black */
    glColor3f(0.0,0.0,1.0);
    gluOrtho2D(0 , 640 , 0 , 480);
}
void main(int argc, char **argv)
{
        clock_t start=0,end=0;
        double totalTime=0; 
        printf("Enter center of the circle: ");
        scanf("%ld %ld", &X, &Y);
        printf("Enter the radius of the circle: ");
        scanf("%ld", &r);
    /* Initialise GLUT library */
    glutInit(&argc,argv);
    /* Set the initial display mode */
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    /* Set the initial window position and size */
    glutInitWindowPosition(0,0);
    glutInitWindowSize(640,480);
    /* Create the window with title "DDA_Line" */
    glutCreateWindow("DDA_Line");
    /* Initialize drawing colors */
    Init();
    /* Call the displaying function */
        start=clock();
        glutDisplayFunc(CircleDraw);
        end=clock();
        totalTime=(double)(end-start)/CLOCKS_PER_SEC;
        printf("Total Time is %lf\n",totalTime);
    /* Keep displaying untill the program is closed */
    glutMainLoop();
}